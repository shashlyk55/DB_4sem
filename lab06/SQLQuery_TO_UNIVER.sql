use UNIVER
--task 01
select AUDITORIUM_TYPE.AUDITORIUM_TYPENAME,
	max(AUDITORIUM.AUDITORIUM_CAPACITY)[max_capacity],
	min(AUDITORIUM.AUDITORIUM_CAPACITY)[min_capacity],
	avg(AUDITORIUM.AUDITORIUM_CAPACITY)[avg_capacity]
from AUDITORIUM inner join AUDITORIUM_TYPE
	on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE
	group by AUDITORIUM_TYPE.AUDITORIUM_TYPENAME


--task 02
select AUDITORIUM_TYPE.AUDITORIUM_TYPENAME,
	max(AUDITORIUM.AUDITORIUM_CAPACITY)[max_capacity],
	min(AUDITORIUM.AUDITORIUM_CAPACITY)[min_capacity],
	avg(AUDITORIUM.AUDITORIUM_CAPACITY)[avg_capacity],
	COUNT(AUDITORIUM_TYPE.AUDITORIUM_TYPENAME)[count],
	sum(AUDITORIUM.AUDITORIUM_CAPACITY)[sum]
from AUDITORIUM inner join AUDITORIUM_TYPE
	on.AUDITORIUM_TYPE.AUDITORIUM_TYPE = AUDITORIUM.AUDITORIUM_TYPE
	group by AUDITORIUM_TYPE.AUDITORIUM_TYPENAME


--task 03 
use UNIVER
select *
from (select case when PROGRESS.NOTE between 6 and 8 
	then PROGRESS.NOTE
	end [note], 
	case when PROGRESS.NOTE between 6 and 8 
	then COUNT(PROGRESS.NOTE)
	end [note_count]
	from PROGRESS
	group by PROGRESS.NOTE) as t
where t.note is not null
order by t.note asc


--task 04
select GROUPS.YEAR_FIRST,
	FACULTY.FACULTY_NAME,
	GROUPS.PROFESSION,
	round(avg(cast(PROGRESS.NOTE as float(4))),2)[avg_note]
from GROUPS inner join FACULTY
on GROUPS.FACULTY = FACULTY.FACULTY
inner join STUDENT
on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS
on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT 
group by GROUPS.YEAR_FIRST,GROUPS.PROFESSION,FACULTY.FACULTY_NAME


--task 05
select GROUPS.YEAR_FIRST,
	FACULTY.FACULTY_NAME,
	GROUPS.PROFESSION,
	round(avg(cast(PROGRESS.NOTE as float(4))),2)[avg_note]
from GROUPS inner join FACULTY
on GROUPS.FACULTY = FACULTY.FACULTY
inner join STUDENT
on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS
on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT 
where PROGRESS.[SUBJECT] like '%¡ƒ%' or PROGRESS.[SUBJECT] like '%Œ¿Ëœ%'
group by GROUPS.YEAR_FIRST,GROUPS.PROFESSION,FACULTY.FACULTY_NAME


--task 06
select GROUPS.PROFESSION,
	PROGRESS.[SUBJECT],
	round(avg(cast(PROGRESS.NOTE as float(4))),2)[avg_note]
from GROUPS inner join FACULTY
on GROUPS.FACULTY = FACULTY.FACULTY
inner join STUDENT
on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS
on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT 
where FACULTY.FACULTY like '»“'
group by GROUPS.PROFESSION,PROGRESS.[SUBJECT]


--task 07
select t.[SUBJECT],
	count(t.students_count)[students_count]
from (select PROGRESS.[SUBJECT],
	PROGRESS.NOTE,
	count(PROGRESS.IDSTUDENT)[students_count]
	from PROGRESS
	group by PROGRESS.[SUBJECT],PROGRESS.NOTE
	having PROGRESS.NOTE = 8 or PROGRESS.NOTE = 9) as t
group by t.[SUBJECT]


select PROGRESS.[SUBJECT],
	PROGRESS.NOTE,
	count(PROGRESS.IDSTUDENT)
from PROGRESS
group by PROGRESS.NOTE,PROGRESS.[SUBJECT]
having PROGRESS.NOTE = 8 or PROGRESS.NOTE = 9



